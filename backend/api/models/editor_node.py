# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class EditorNode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pos_x=None, pos_y=None):  # noqa: E501
        """EditorNode - a model defined in OpenAPI

        :param pos_x: The pos_x of this EditorNode.  # noqa: E501
        :type pos_x: int
        :param pos_y: The pos_y of this EditorNode.  # noqa: E501
        :type pos_y: int
        """
        self.openapi_types = {
            'pos_x': int,
            'pos_y': int
        }

        self.attribute_map = {
            'pos_x': 'PosX',
            'pos_y': 'PosY'
        }

        self._pos_x = pos_x
        self._pos_y = pos_y

    @classmethod
    def from_dict(cls, dikt) -> 'EditorNode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EditorNode of this EditorNode.  # noqa: E501
        :rtype: EditorNode
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pos_x(self):
        """Gets the pos_x of this EditorNode.

        none  # noqa: E501

        :return: The pos_x of this EditorNode.
        :rtype: int
        """
        return self._pos_x

    @pos_x.setter
    def pos_x(self, pos_x):
        """Sets the pos_x of this EditorNode.

        none  # noqa: E501

        :param pos_x: The pos_x of this EditorNode.
        :type pos_x: int
        """
        if pos_x is None:
            raise ValueError("Invalid value for `pos_x`, must not be `None`")  # noqa: E501

        self._pos_x = pos_x

    @property
    def pos_y(self):
        """Gets the pos_y of this EditorNode.

        none  # noqa: E501

        :return: The pos_y of this EditorNode.
        :rtype: int
        """
        return self._pos_y

    @pos_y.setter
    def pos_y(self, pos_y):
        """Sets the pos_y of this EditorNode.

        none  # noqa: E501

        :param pos_y: The pos_y of this EditorNode.
        :type pos_y: int
        """
        if pos_y is None:
            raise ValueError("Invalid value for `pos_y`, must not be `None`")  # noqa: E501

        self._pos_y = pos_y
