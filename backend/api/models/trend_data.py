# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class TrendData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp=None, timestamp_ms=None):  # noqa: E501
        """TrendData - a model defined in OpenAPI

        :param timestamp: The timestamp of this TrendData.  # noqa: E501
        :type timestamp: int
        :param timestamp_ms: The timestamp_ms of this TrendData.  # noqa: E501
        :type timestamp_ms: int
        """
        self.openapi_types = {
            'timestamp': int,
            'timestamp_ms': int
        }

        self.attribute_map = {
            'timestamp': 'Timestamp',
            'timestamp_ms': 'TimestampMs'
        }

        self._timestamp = timestamp
        self._timestamp_ms = timestamp_ms

    @classmethod
    def from_dict(cls, dikt) -> 'TrendData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrendData of this TrendData.  # noqa: E501
        :rtype: TrendData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self):
        """Gets the timestamp of this TrendData.


        :return: The timestamp of this TrendData.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this TrendData.


        :param timestamp: The timestamp of this TrendData.
        :type timestamp: int
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def timestamp_ms(self):
        """Gets the timestamp_ms of this TrendData.


        :return: The timestamp_ms of this TrendData.
        :rtype: int
        """
        return self._timestamp_ms

    @timestamp_ms.setter
    def timestamp_ms(self, timestamp_ms):
        """Sets the timestamp_ms of this TrendData.


        :param timestamp_ms: The timestamp_ms of this TrendData.
        :type timestamp_ms: int
        """
        if timestamp_ms is None:
            raise ValueError("Invalid value for `timestamp_ms`, must not be `None`")  # noqa: E501

        self._timestamp_ms = timestamp_ms
