# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class TrendDataTrends(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trend_id=None, color=None, name=None, axis_label=None):  # noqa: E501
        """TrendDataTrends - a model defined in OpenAPI

        :param trend_id: The trend_id of this TrendDataTrends.  # noqa: E501
        :type trend_id: int
        :param color: The color of this TrendDataTrends.  # noqa: E501
        :type color: str
        :param name: The name of this TrendDataTrends.  # noqa: E501
        :type name: str
        :param axis_label: The axis_label of this TrendDataTrends.  # noqa: E501
        :type axis_label: str
        """
        self.openapi_types = {
            'trend_id': int,
            'color': str,
            'name': str,
            'axis_label': str
        }

        self.attribute_map = {
            'trend_id': 'TrendID',
            'color': 'Color',
            'name': 'Name',
            'axis_label': 'AxisLabel'
        }

        self._trend_id = trend_id
        self._color = color
        self._name = name
        self._axis_label = axis_label

    @classmethod
    def from_dict(cls, dikt) -> 'TrendDataTrends':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrendData_Trends of this TrendDataTrends.  # noqa: E501
        :rtype: TrendDataTrends
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trend_id(self):
        """Gets the trend_id of this TrendDataTrends.


        :return: The trend_id of this TrendDataTrends.
        :rtype: int
        """
        return self._trend_id

    @trend_id.setter
    def trend_id(self, trend_id):
        """Sets the trend_id of this TrendDataTrends.


        :param trend_id: The trend_id of this TrendDataTrends.
        :type trend_id: int
        """

        self._trend_id = trend_id

    @property
    def color(self):
        """Gets the color of this TrendDataTrends.


        :return: The color of this TrendDataTrends.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this TrendDataTrends.


        :param color: The color of this TrendDataTrends.
        :type color: str
        """

        self._color = color

    @property
    def name(self):
        """Gets the name of this TrendDataTrends.


        :return: The name of this TrendDataTrends.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TrendDataTrends.


        :param name: The name of this TrendDataTrends.
        :type name: str
        """

        self._name = name

    @property
    def axis_label(self):
        """Gets the axis_label of this TrendDataTrends.


        :return: The axis_label of this TrendDataTrends.
        :rtype: str
        """
        return self._axis_label

    @axis_label.setter
    def axis_label(self, axis_label):
        """Sets the axis_label of this TrendDataTrends.


        :param axis_label: The axis_label of this TrendDataTrends.
        :type axis_label: str
        """

        self._axis_label = axis_label
