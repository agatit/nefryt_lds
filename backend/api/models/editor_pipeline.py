# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class EditorPipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area_width=None, area_height=None, area_width_division=None, area_height_division=None):  # noqa: E501
        """EditorPipeline - a model defined in OpenAPI

        :param area_width: The area_width of this EditorPipeline.  # noqa: E501
        :type area_width: int
        :param area_height: The area_height of this EditorPipeline.  # noqa: E501
        :type area_height: int
        :param area_width_division: The area_width_division of this EditorPipeline.  # noqa: E501
        :type area_width_division: int
        :param area_height_division: The area_height_division of this EditorPipeline.  # noqa: E501
        :type area_height_division: int
        """
        self.openapi_types = {
            'area_width': int,
            'area_height': int,
            'area_width_division': int,
            'area_height_division': int
        }

        self.attribute_map = {
            'area_width': 'AreaWidth',
            'area_height': 'AreaHeight',
            'area_width_division': 'AreaWidthDivision',
            'area_height_division': 'AreaHeightDivision'
        }

        self._area_width = area_width
        self._area_height = area_height
        self._area_width_division = area_width_division
        self._area_height_division = area_height_division

    @classmethod
    def from_dict(cls, dikt) -> 'EditorPipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EditorPipeline of this EditorPipeline.  # noqa: E501
        :rtype: EditorPipeline
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area_width(self):
        """Gets the area_width of this EditorPipeline.

        none  # noqa: E501

        :return: The area_width of this EditorPipeline.
        :rtype: int
        """
        return self._area_width

    @area_width.setter
    def area_width(self, area_width):
        """Sets the area_width of this EditorPipeline.

        none  # noqa: E501

        :param area_width: The area_width of this EditorPipeline.
        :type area_width: int
        """
        if area_width is None:
            raise ValueError("Invalid value for `area_width`, must not be `None`")  # noqa: E501

        self._area_width = area_width

    @property
    def area_height(self):
        """Gets the area_height of this EditorPipeline.

        none  # noqa: E501

        :return: The area_height of this EditorPipeline.
        :rtype: int
        """
        return self._area_height

    @area_height.setter
    def area_height(self, area_height):
        """Sets the area_height of this EditorPipeline.

        none  # noqa: E501

        :param area_height: The area_height of this EditorPipeline.
        :type area_height: int
        """
        if area_height is None:
            raise ValueError("Invalid value for `area_height`, must not be `None`")  # noqa: E501

        self._area_height = area_height

    @property
    def area_width_division(self):
        """Gets the area_width_division of this EditorPipeline.

        none  # noqa: E501

        :return: The area_width_division of this EditorPipeline.
        :rtype: int
        """
        return self._area_width_division

    @area_width_division.setter
    def area_width_division(self, area_width_division):
        """Sets the area_width_division of this EditorPipeline.

        none  # noqa: E501

        :param area_width_division: The area_width_division of this EditorPipeline.
        :type area_width_division: int
        """
        if area_width_division is None:
            raise ValueError("Invalid value for `area_width_division`, must not be `None`")  # noqa: E501

        self._area_width_division = area_width_division

    @property
    def area_height_division(self):
        """Gets the area_height_division of this EditorPipeline.

        none  # noqa: E501

        :return: The area_height_division of this EditorPipeline.
        :rtype: int
        """
        return self._area_height_division

    @area_height_division.setter
    def area_height_division(self, area_height_division):
        """Sets the area_height_division of this EditorPipeline.

        none  # noqa: E501

        :param area_height_division: The area_height_division of this EditorPipeline.
        :type area_height_division: int
        """
        if area_height_division is None:
            raise ValueError("Invalid value for `area_height_division`, must not be `None`")  # noqa: E501

        self._area_height_division = area_height_division
