openapi: 3.0.0
info:
  title: Nefryt LDS API
  description: Database API for Nefryt LDS
  version: 1.0.0
servers:
  - url: 'http://192.168.1.231:8080/'
    description: Test server
  - url: 'http://localhost:8080/'
    description: Developer's local server
paths:
  /trend:
    get:
      summary: List trends
      operationId: listTrends
      description: List all trends
      tags:
        - trends
      responses:
        '200':
          description: A array of trends
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trend'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Create trend
      operationId: createTrend
      description: Create a trend
      tags:
        - trends
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trend'
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/trend/{trendId}':
    get:
      summary: Detail trend
      operationId: getTrendById
      description: Info for specific trend
      tags:
        - trends
      parameters:
        - $ref: '#/components/parameters/trendId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      summary: Update trend
      operationId: updateTrend
      description: Update a trend
      tags:
        - trends
      parameters:
        - $ref: '#/components/parameters/trendId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trend'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Deletes trend
      operationId: deleteTrendById
      description: Deletes specific trend
      tags:
        - trends
      parameters:
        - $ref: '#/components/parameters/trendId'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/trend/{trendId}/param':
    get:
      summary: List trend params
      operationId: listTrendParams
      description: List all trend params
      tags:
        - trends
      parameters:
        - $ref: '#/components/parameters/trendId'
      responses:
        '200':
          description: A array of params
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrendParam'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/trend/{trendId}/param/{trendParamDefId}':
    get:
      summary: Gets trend param detail
      operationId: getTrendParamById
      description: Info for specific trend param
      tags:
        - trends
      parameters:
        - $ref: '#/components/parameters/trendId'
        - $ref: '#/components/parameters/trendParamDefId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendParam'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      summary: Update trend params
      operationId: updateTrendParam
      description: Updates trend param
      tags:
        - trends
      parameters:
        - $ref: '#/components/parameters/trendId'
        - $ref: '#/components/parameters/trendParamDefId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrendParam'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendParam'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/trend/{trendIdList}/data/{begin}/{end}/{samples}':
    get:
      summary: List trend data
      operationId: getTrendData
      description: List data
      tags:
        - trends
      parameters:
        - name: trendIdList
          in: path
          required: true
          description: Lost of ids of the trend to retrieve
          schema:
            type: array
            items:
              type: integer
        - name: begin
          in: path
          required: true
          description: start of date to take from data (timestamp UTC)
          schema:
            type: integer
        - name: end
          in: path
          required: true
          description: end of date to take from data (timestamp UTC)
          schema:
            type: integer
        - name: samples
          in: path
          required: true
          description: number of data samples to take (resolution)
          schema:
            type: integer
      responses:
        '200':
          description: A array of trend data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrendData'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /trend_def:
    get:
      summary: List trend defs
      operationId: listTrendDefs
      description: List all trend defs
      tags:
        - trends
      responses:
        '200':
          description: A array of trend defs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrendDef'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /node:
    get:
      summary: List nodes
      operationId: listNodes
      description: List all nodes
      tags:
        - nodes
      responses:
        '200':
          description: A array of nodes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Create nodes
      operationId: createNode
      description: Create a nodes
      tags:
        - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/node/{nodeId}':
    get:
      summary: Gets node details
      operationId: getNodeById
      description: Info for specific node
      tags:
        - nodes
      parameters:
        - $ref: '#/components/parameters/nodeId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      summary: Updates nodes
      operationId: updateNode
      description: Updates a nodes
      tags:
        - nodes
      parameters:
        - $ref: '#/components/parameters/nodeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Deletes node
      operationId: deleteNodeById
      description: Deletes specific node
      tags:
        - nodes
      parameters:
        - $ref: '#/components/parameters/nodeId'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /pipeline:
    get:
      summary: List pipelines
      operationId: listPipelines
      description: List all pipelines
      tags:
        - pipelines
      responses:
        '200':
          description: A array of pipelines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pipeline'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Create pipeline
      operationId: createPipeline
      description: Create a pipeline
      tags:
        - pipelines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/pipeline/{pipelineId}':
    get:
      summary: Gets pipeline details
      operationId: getPipelineById
      description: Info for specific pipeline
      tags:
        - pipelines
      parameters:
        - $ref: '#/components/parameters/pipelineId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      summary: Updates pipeline
      operationId: updatePipeline
      description: Updates pipeline
      tags:
        - pipelines
      parameters:
        - name: pipelineId
          in: path
          required: true
          description: The id of the pipeline to retrieve
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Deletes pipeline
      operationId: deletePipelineById
      description: Deletes specific pipeline
      tags:
        - pipelines
      parameters:
        - $ref: '#/paths/~1pipeline~1%7BpipelineId%7D/put/parameters/0'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/pipeline/{pipelineId}/method':
    get:
      summary: List pipelnie methods
      operationId: listMethods
      description: List all methods
      tags:
        - methods
      parameters:
        - $ref: '#/components/parameters/pipelineId'
      responses:
        '200':
          description: A array of  methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Method'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Creates method
      operationId: createMethod
      description: Creates a  method
      tags:
        - methods
      parameters:
        - $ref: '#/components/parameters/pipelineId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Method'
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Method'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/pipeline/{pipelineId}/method/{methodId}':
    get:
      summary: Gets  method details
      operationId: getMethodById
      description: Info for specific  method
      tags:
        - methods
      parameters:
        - $ref: '#/components/parameters/pipelineId'
        - $ref: '#/components/parameters/methodId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - ID
                  - MethodDefID
                  - PipelineID
                properties:
                  ID:
                    type: integer
                    readOnly: true
                    description: none
                    example: 0
                  MethodDefID:
                    type: integer
                    nullable: false
                    example: 0
                  PipelineID:
                    type: integer
                    nullable: false
                    example: 0
                  Name:
                    type: string
                    example: Arthur Dent
                    pattern: '^.{0,30}'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      summary: Updates method
      operationId: updateMethod
      description: Updates  method
      tags:
        - methods
      parameters:
        - $ref: '#/components/parameters/pipelineId'
        - $ref: '#/components/parameters/methodId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Method'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Method'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Deletes  method
      operationId: deleteMethodById
      description: Deletes specific  method
      tags:
        - methods
      parameters:
        - $ref: '#/components/parameters/pipelineId'
        - $ref: '#/components/parameters/methodId'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/pipeline/{pipelineId}/method/{methodId}/param':
    get:
      summary: List pipelnie method params
      operationId: listMethodParams
      description: List all  method params
      tags:
        - methods
      parameters:
        - $ref: '#/components/parameters/pipelineId'
        - $ref: '#/components/parameters/methodId'
      responses:
        '200':
          description: A array of  methods params
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MethodParam'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/pipeline/{pipelineId}/method/{methodId}/param/{methodParamDefId}':
    put:
      summary: Put pipelnie method params
      operationId: updateMethodParams
      description: Put  method params
      tags:
        - methods
      parameters:
        - $ref: '#/components/parameters/pipelineId'
        - $ref: '#/components/parameters/methodId'
        - name: methodParamDefId
          in: path
          required: true
          description: The id of the param to retrieve
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MethodParam'
      responses:
        '201':
          $ref: '#/components/responses/Updated'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /event:
    get:
      summary: List events
      operationId: listEvents
      description: List all events
      tags:
        - events
      responses:
        '200':
          description: A array of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/event/{eventId}':
    get:
      summary: Gets detailed event
      operationId: getEventById
      description: Info for specific event
      tags:
        - events
      parameters:
        - $ref: '#/components/parameters/eventId'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/event/{eventId}/ack':
    post:
      summary: Acknowledges ack
      operationId: ackEvent
      description: Acknowledges an event
      tags:
        - events
      parameters:
        - $ref: '#/components/parameters/eventId'
      responses:
        '200':
          $ref: '#/components/responses/Updated'
        default:
          $ref: '#/components/responses/UnexpectedError'
components:
  parameters:
    eventId:
      name: eventId
      in: path
      required: true
      description: The id of the event to retrieve
      schema:
        type: integer
    nodeId:
      name: nodeId
      in: path
      required: true
      description: The id of the node to retrieve
      schema:
        type: integer
    pipelineId:
      name: pipelineId
      in: path
      required: true
      description: The id of the pipeline to retrieve
      schema:
        type: integer
    methodId:
      name: methodId
      in: path
      required: true
      description: The id of the pipeline method to retrieve
      schema:
        type: integer
    trendId:
      name: trendId
      in: path
      required: true
      description: The id of the trend to retrieve
      schema:
        type: integer
    trendParamDefId:
      name: trendParamDefId
      in: path
      required: true
      description: The id of the param to retrieve
      schema:
        type: string
    editorNodeId:
      name: editorNodeId
      in: path
      required: true
      description: The id of the editor node to retrieve
      schema:
        type: integer
    editorPipelineId:
      name: editorPipelineId
      in: path
      required: true
      description: The id of the editor pipeline to retrieve
      schema:
        type: integer
  schemas:
    Link:
      type: object
      required:
        - ID
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        BeginNodeID:
          type: integer
          description: none
        EndNodeID:
          type: integer
          description: none
        Length:
          type: number
          description: none
    Method:
      type: object
      required:
        - ID
        - MethodDefID
        - PipelineID
      properties:
        ID:
          type: integer
          readOnly: true
          description: none
          example: 0
        MethodDefID:
          type: integer
          nullable: false
          example: 0
        PipelineID:
          type: integer
          nullable: false
          example: 0
        Name:
          type: string
          example: Arthur Dent
          pattern: '^.{0,30}'
    MethodDef:
      type: object
      required:
        - ID
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        Name:
          type: string
          pattern: '^.{0,30}'
          description: none
    MethodParam:
      type: object
      required:
        - PipelineID
        - MethodID
      properties:
        PipelineID:
          type: integer
          nullable: false
          description: none
          example: 0
        MethodID:
          type: integer
          nullable: false
          description: none
        MethodParamDefID:
          type: integer
          nullable: false
          description: none
          example: 0
        DataType:
          type: string
          pattern: '^.{0,6}'
          description: none
        Name:
          type: string
          pattern: '^.{0,30}'
          description: none
        Value:
          type: string
          pattern: '^.{0,30}'
          description: none
    MethodParamDef:
      type: object
      required:
        - ID
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        MethodDefID:
          type: integer
          description: none
        Name:
          type: string
          pattern: '^.{0,30}'
          description: none
        DataType:
          type: string
          pattern: '^.{0,6}'
          description: none
    Node:
      type: object
      required:
        - ID
        - Type
      properties:
        ID:
          type: integer
          readOnly: true
          description: none
          example: 0
        Type:
          type: string
          nullable: false
          pattern: '^.{0,6}'
          description: none
        TrendID:
          type: integer
          nullable: true
          description: none
        Name:
          type: string
          pattern: '^.{0,50}'
          description: none
        EditorParams:
          $ref: '#/components/schemas/EditorNode'
    Pipeline:
      type: object
      required:
        - ID
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        Name:
          type: string
          pattern: '^.{0,30}'
          description: none
        BeginPos:
          type: number
          description: none
        EditorParams:
          $ref: '#/components/schemas/EditorPipeline'
    PipelineNode:
      type: object
      required:
        - ID
        - NodeID
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        NodeID:
          type: integer
          description: none
        First:
          type: boolean
          description: none
    Trend:
      type: object
      required:
        - ID
        - TrendDefID
        - RawMin
        - RawMax
        - ScaledMin
        - ScaledMax
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          example: 0
          description: none
        Name:
          type: string
          pattern: '^.{0,30}'
          description: none
        TrendGroupID:
          type: integer
          description: none
        TrendDefID:
          type: string
          description: none
        TimeExponent:
          type: integer
          description: none
        Format:
          type: string
          description: none
        Unit:
          type: string
          description: none
        Color:
          type: string
        Symbol:
          type: string
        RawMin:
          type: integer
        RawMax:
          type: integer
        ScaledMin:
          type: number
          format: double
        ScaledMax:
          type: number
          format: double
    TrendData:
      type: object
      required:
        - Timestamp
        - TimestampMs
      properties:
        Timestamp:
          type: integer
        TimestampMs:
          type: integer
      additionalProperties:
        type: number
    TrendDef:
      type: object
      required:
        - ID
        - Name
        - TimeExponent
        - Format
        - SIUnitTID
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        Name:
          type: string
          pattern: '^.{0,30}'
          description: none
        TimeExponent:
          type: integer
          description: none
        Format:
          type: string
          pattern: '^.{0,20}'
          description: none
        SIUnitTID:
          type: string
          pattern: '^.{0,8}'
          description: none
    TrendGroup:
      type: object
      required:
        - ID
        - Name
        - AnalisisOnly
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        Name:
          type: string
          pattern: '^.{0,100}'
          description: none
        AnalisisOnly:
          type: boolean
          description: none
    TrendParam:
      type: object
      required:
        - TrendID
        - TrendParamDefID
        - Value
      properties:
        TrendID:
          type: integer
          readOnly: true
          description: none
        TrendParamDefID:
          type: string
          readOnly: true
        Name:
          type: string
          readOnly: true
          pattern: '^.{0,30}'
        DataType:
          type: string
          readOnly: true
          pattern: '^.{0,6}'
        Value:
          type: string
          pattern: '^.{0,30}'
    TrendParamDef:
      type: object
      required:
        - ID
        - TrendDefID
      properties:
        ID:
          type: integer
          nullable: false
          readOnly: true
          description: none
          example: 0
        TrendDefID:
          type: integer
          nullable: false
          description: none
        Name:
          type: string
          pattern: '^.{0,30}'
          description: none
        DataType:
          type: string
          pattern: '^.{0,6}'
          description: none
    Event:
      type: object
      required:
        - ID
        - EventDefID
        - MethodID
        - BeginDate
      properties:
        ID:
          type: integer
          format: int64
          example: 0
          readOnly: true
          description: none
        EventDefID:
          type: integer
          description: none
        MethodID:
          type: integer
          description: none
        BeginDate:
          type: string
          format: date-time
          description: none
        AckDate:
          type: string
          format: date-time
          description: none
        EndDate:
          type: string
          format: date-time
          description: none
        Details:
          type: string
          description: none
        Position:
          type: integer
          description: none
        Caption:
          type: string
          description: none
        Verbosity:
          type: string
          description: none
        Silient:
          type: boolean
          description: none
    EditorPipeline:
      type: object
      required:
        - AreaWidth
        - AreaHeight
        - AreaWidthDivision
        - AreaHeightDivision
      properties:
        AreaWidth:
          type: integer
          nullable: false
          pattern: '^.{0,6}'
          description: none
        AreaHeight:
          type: integer
          nullable: false
          description: none
        AreaWidthDivision:
          type: integer
          nullable: false
          description: none
        AreaHeightDivision:
          type: integer
          nullable: false
          description: none
    EditorNode:
      type: object
      required:
        - PosX
        - PosY
      properties:
        PosX:
          type: integer
          nullable: false
          pattern: '^.{0,6}'
          description: none
        PosY:
          type: integer
          nullable: false
          description: none
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Information:
      type: object
      required:
        - status
        - affected
        - message
      properties:
        status:
          type: integer
          format: int32
          nullable: false
        affected:
          type: integer
          format: int32
          nullable: false
        message:
          type: string
          nullable: true
  responses:
    UnexpectedError:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NullResponse:
      description: Null response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Information'
    Created:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Information'
    Updated:
      description: Updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Information'
    Deleted:
      description: Deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Information'
